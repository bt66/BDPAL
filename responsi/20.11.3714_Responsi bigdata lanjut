{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN9mbte9TYMQQkvZywKVsVp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## KLASIFIKASI DATASET IRIS DENGAN ALGORITMA NAIVE BAYES CLASSIFIER"],"metadata":{"id":"ajrxPAiltYTe"}},{"cell_type":"markdown","source":["## Nama : Muhammad Bastian Hanafi\n","## NIM  : 20.11.3714\n","## Kelas: 20 IF 07"],"metadata":{"id":"m9A1o0SJhfi4"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"zRY6IKOdgJkl","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1673423018207,"user_tz":-420,"elapsed":43067,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"2e30a892-ec1d-41f0-8204-ddd6a892070c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pyspark\n","  Downloading pyspark-3.3.1.tar.gz (281.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m281.4/281.4 MB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting py4j==0.10.9.5\n","  Downloading py4j-0.10.9.5-py2.py3-none-any.whl (199 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.7/199.7 KB\u001b[0m \u001b[31m21.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.3.1-py2.py3-none-any.whl size=281845512 sha256=1b46b20b330dc90d0a19373f0985e3aa9ecb237765aaec9a4330d21a69ad5339\n","  Stored in directory: /root/.cache/pip/wheels/43/dc/11/ec201cd671da62fa9c5cc77078235e40722170ceba231d7598\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","Successfully installed py4j-0.10.9.5 pyspark-3.3.1\n"]}],"source":["!pip install -q findspark\n","!pip install pyspark"]},{"cell_type":"code","source":["#import Library\n","from pyspark import SparkContext\n","from pyspark.sql import SQLContext\n","from pyspark.sql import SparkSession\n","from pyspark.ml.classification import NaiveBayes\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","from pyspark.ml.feature import VectorAssembler\n","from sklearn.metrics import confusion_matrix\n","import pandas as pd"],"metadata":{"id":"1yEs6tIDgwyB","executionInfo":{"status":"ok","timestamp":1673423022655,"user_tz":-420,"elapsed":2223,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# create spark session\n","sc = SparkContext().getOrCreate()\n","sqlContext = SQLContext(sc)\n","spark = SparkSession.builder.getOrCreate()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"lbqeY_JPqlUX","executionInfo":{"status":"ok","timestamp":1673423031518,"user_tz":-420,"elapsed":8868,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"8a5adc85-207f-4db4-873d-7e5dfb59df39"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/pyspark/sql/context.py:112: FutureWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# encoding data from string to numeric\n","from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()"],"metadata":{"id":"xcoOL9fImp8s","executionInfo":{"status":"ok","timestamp":1673423034071,"user_tz":-420,"elapsed":2,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/iris.csv')"],"metadata":{"id":"iysxoWLBom3p","executionInfo":{"status":"ok","timestamp":1673423034584,"user_tz":-420,"elapsed":2,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xmfrZDxTotgj","executionInfo":{"status":"ok","timestamp":1673423035086,"user_tz":-420,"elapsed":4,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"8ad847d8-e3ff-474b-a666-d23427798490"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n","0   1            5.1           3.5            1.4           0.2  Iris-setosa\n","1   2            4.9           3.0            1.4           0.2  Iris-setosa\n","2   3            4.7           3.2            1.3           0.2  Iris-setosa\n","3   4            4.6           3.1            1.5           0.2  Iris-setosa\n","4   5            5.0           3.6            1.4           0.2  Iris-setosa"],"text/html":["\n","  <div id=\"df-c10d1d70-494c-43fc-899b-a7474c886414\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c10d1d70-494c-43fc-899b-a7474c886414')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c10d1d70-494c-43fc-899b-a7474c886414 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c10d1d70-494c-43fc-899b-a7474c886414');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# convert species into number\n","df['label']=le.fit_transform(df['Species'])\n","\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"nh3YuIVZoxNY","executionInfo":{"status":"ok","timestamp":1673423125368,"user_tz":-420,"elapsed":551,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"4fd8aaa5-6948-47a3-9c3d-56c8deba68a1"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species  \\\n","0   1            5.1           3.5            1.4           0.2        0   \n","1   2            4.9           3.0            1.4           0.2        0   \n","2   3            4.7           3.2            1.3           0.2        0   \n","3   4            4.6           3.1            1.5           0.2        0   \n","4   5            5.0           3.6            1.4           0.2        0   \n","\n","   label  \n","0      0  \n","1      0  \n","2      0  \n","3      0  \n","4      0  "],"text/html":["\n","  <div id=\"df-e916a119-ce46-4628-8b83-8b3d2edefc8e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e916a119-ce46-4628-8b83-8b3d2edefc8e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e916a119-ce46-4628-8b83-8b3d2edefc8e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e916a119-ce46-4628-8b83-8b3d2edefc8e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# convert pands to spark \n","sparkDF=spark.createDataFrame(df) \n","\n","sparkDF.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"RD8Q_g3OwRES","executionInfo":{"status":"ok","timestamp":1673423127782,"user_tz":-420,"elapsed":340,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"f141c480-17af-439f-a20c-6a58300074ff"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["+---+-------------+------------+-------------+------------+-------+-----+\n","| Id|SepalLengthCm|SepalWidthCm|PetalLengthCm|PetalWidthCm|Species|label|\n","+---+-------------+------------+-------------+------------+-------+-----+\n","|  1|          5.1|         3.5|          1.4|         0.2|      0|    0|\n","|  2|          4.9|         3.0|          1.4|         0.2|      0|    0|\n","|  3|          4.7|         3.2|          1.3|         0.2|      0|    0|\n","|  4|          4.6|         3.1|          1.5|         0.2|      0|    0|\n","|  5|          5.0|         3.6|          1.4|         0.2|      0|    0|\n","|  6|          5.4|         3.9|          1.7|         0.4|      0|    0|\n","|  7|          4.6|         3.4|          1.4|         0.3|      0|    0|\n","|  8|          5.0|         3.4|          1.5|         0.2|      0|    0|\n","|  9|          4.4|         2.9|          1.4|         0.2|      0|    0|\n","| 10|          4.9|         3.1|          1.5|         0.1|      0|    0|\n","+---+-------------+------------+-------------+------------+-------+-----+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":["# 3. Visualisasi data\n","#convert pandas dataframe to pyspark dataframe\n","data = sqlContext.createDataFrame(df)\n","\n","#print typedata and 10 data upper\n","print(data.printSchema()) \n","\n","data.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"UUUZHxgGpxv3","executionInfo":{"status":"ok","timestamp":1673423130734,"user_tz":-420,"elapsed":556,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"247e393e-01aa-42b8-cc98-70886d7b7b63"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- Id: long (nullable = true)\n"," |-- SepalLengthCm: double (nullable = true)\n"," |-- SepalWidthCm: double (nullable = true)\n"," |-- PetalLengthCm: double (nullable = true)\n"," |-- PetalWidthCm: double (nullable = true)\n"," |-- Species: long (nullable = true)\n"," |-- label: long (nullable = true)\n","\n","None\n","+---+-------------+------------+-------------+------------+-------+-----+\n","| Id|SepalLengthCm|SepalWidthCm|PetalLengthCm|PetalWidthCm|Species|label|\n","+---+-------------+------------+-------------+------------+-------+-----+\n","|  1|          5.1|         3.5|          1.4|         0.2|      0|    0|\n","|  2|          4.9|         3.0|          1.4|         0.2|      0|    0|\n","|  3|          4.7|         3.2|          1.3|         0.2|      0|    0|\n","|  4|          4.6|         3.1|          1.5|         0.2|      0|    0|\n","|  5|          5.0|         3.6|          1.4|         0.2|      0|    0|\n","|  6|          5.4|         3.9|          1.7|         0.4|      0|    0|\n","|  7|          4.6|         3.4|          1.4|         0.3|      0|    0|\n","|  8|          5.0|         3.4|          1.5|         0.2|      0|    0|\n","|  9|          4.4|         2.9|          1.4|         0.2|      0|    0|\n","| 10|          4.9|         3.1|          1.5|         0.1|      0|    0|\n","+---+-------------+------------+-------------+------------+-------+-----+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":["# 4. Penentuan variabel Independen(X) == SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\" dan independent(y) == label\n","va = VectorAssembler(inputCols = [\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"], outputCol='features')\n","\n","va_df = va.transform(data)\n","va_df = va_df.select(['features', 'label'])\n","va_df.show(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"kH5asn7LsRkV","executionInfo":{"status":"ok","timestamp":1673423134768,"user_tz":-420,"elapsed":555,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"9d9086bf-835c-4a00-bc96-cf37114709da"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["+-----------------+-----+\n","|         features|label|\n","+-----------------+-----+\n","|[5.1,3.5,1.4,0.2]|    0|\n","|[4.9,3.0,1.4,0.2]|    0|\n","|[4.7,3.2,1.3,0.2]|    0|\n","+-----------------+-----+\n","only showing top 3 rows\n","\n"]}]},{"cell_type":"code","source":["# 5. Split data training dan testing\n","(train, test) = va_df.randomSplit([0.9, 0.1])"],"metadata":{"id":"c5O_3ODyx6rx","executionInfo":{"status":"ok","timestamp":1673423138949,"user_tz":-420,"elapsed":946,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# 6. algoritma training \n","nb = NaiveBayes(smoothing=1.0, modelType=\"multinomial\")\n","nb = nb.fit(train)"],"metadata":{"id":"l8wvm8xBx7qA","executionInfo":{"status":"ok","timestamp":1673423141931,"user_tz":-420,"elapsed":2395,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["pred = nb.transform(test)\n","pred.show(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"lFf33kWpytmY","executionInfo":{"status":"ok","timestamp":1673423156910,"user_tz":-420,"elapsed":1925,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"423d095e-fb90-4af1-febc-c7c1957a69d2"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["+-----------------+-----+--------------------+--------------------+----------+\n","|         features|label|       rawPrediction|         probability|prediction|\n","+-----------------+-----+--------------------+--------------------+----------+\n","|[4.3,3.0,1.1,0.1]|    0|[-9.9579287342342...|[0.71566746200261...|       0.0|\n","|[4.6,3.2,1.4,0.2]|    0|[-11.335859716337...|[0.67613032400353...|       0.0|\n","|[4.8,3.4,1.9,0.2]|    0|[-12.661946460567...|[0.62671240826308...|       0.0|\n","+-----------------+-----+--------------------+--------------------+----------+\n","only showing top 3 rows\n","\n"]}]},{"cell_type":"code","source":["evaluator=MulticlassClassificationEvaluator(predictionCol=\"prediction\")\n","acc = evaluator.evaluate(pred)\n","print(\"Prediction Accuracy: \", acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"StqjimbUyvov","executionInfo":{"status":"ok","timestamp":1673423163884,"user_tz":-420,"elapsed":1550,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"2c45d5d9-5528-41ba-b929-80baf2e7a138"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction Accuracy:  0.8947368421052633\n"]}]},{"cell_type":"code","source":["y_pred=pred.select(\"prediction\").collect()\n","y_orig=pred.select(\"label\").collect()\n","\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"A9tIUGziyw63","executionInfo":{"status":"ok","timestamp":1673423166390,"user_tz":-420,"elapsed":1255,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"34ce9521-8d43-4e5f-ce8a-4c8cdf56e153"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=0.0),\n"," Row(prediction=1.0),\n"," Row(prediction=0.0),\n"," Row(prediction=2.0),\n"," Row(prediction=1.0),\n"," Row(prediction=1.0),\n"," Row(prediction=2.0),\n"," Row(prediction=1.0),\n"," Row(prediction=2.0),\n"," Row(prediction=2.0),\n"," Row(prediction=1.0),\n"," Row(prediction=2.0)]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# 7 . Evaluasi dengan confusion matrix\n","cm = confusion_matrix(y_orig, y_pred)\n","print(\"Confusion Matrix:\")\n","print(cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"8eWc6HVayyFQ","executionInfo":{"status":"ok","timestamp":1673423170740,"user_tz":-420,"elapsed":2,"user":{"displayName":"3714_Muhammad Bastian Hanafi","userId":"06608780676813486786"}},"outputId":"6fb1f57c-a291-4fc4-c297-872c84ad4ff2"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[9 0 0]\n"," [0 4 1]\n"," [0 1 4]]\n"]}]}]}